disabled_rules: # rule identifiers to exclude from running
  - control_statement
  - multiple_closures_with_trailing_closure
  - trailing_comma
  - trailing_whitespace
opt_in_rules: # some rules are only opt-in
  - anyobject_protocol
  - array_init
  - attributes
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_collection_literal
  - empty_count
  - empty_xctest_method
  - enum_case_associated_values_count
  - explicit_enum_raw_value
  - explicit_init
  - fatal_error_message
  - file_header
  - file_name_no_space
  - force_unwrapping
  - implicitly_unwrapped_optional
  - let_var_whitespace
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_parameters
  - object_literal
  - operator_usage_whitespace
  - optional_enum_case_matching
  - overridden_super_call
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - raw_value_for_camel_cased_codable_enum
  - redundant_nil_coalescing
  - single_test_class
  - sorted_imports
  - strong_iboutlet
  - switch_case_on_newline
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_declaration
  - unused_import
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces

included:
  - Sources
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length:
  - 130 # warning
  - 150 # error
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length: # only min_length
    error: 2 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)

